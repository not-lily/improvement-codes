/**** Timestamp - RTC code (later) ****/
int timeStamp = 1;
int period = 30000;
unsigned long time_now = 0;
 
/**** Temperature sensor ****/
int lm35Pin = A0;
// float calibration = 0.1039;
// calibrate temp by changing the last digit(s) of "0.1039"
 
/**** LCD ****/
#include <LiquidCrystal.h>
// all of our LCD pins
int lcdRSPin = 7;
int lcdEPin = 6;
int lcdD4Pin = 5;
int lcdD5Pin = 4;
int lcdD6Pin = 3;
int lcdD7Pin = 2;
 
// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(lcdRSPin, lcdEPin, lcdD4Pin, lcdD5Pin, lcdD6Pin, lcdD7Pin);
 
/**** microSD ****/
#include <SPI.h>
#include <SD.h>
File myFile;
 
/**** end ****/
 
 
void setup()
{
  // set up serial at 9600 baud
  // only necessary if going to view temperature on serial monitor
  // Serial.begin(115200);
 
  /**** LCD ****/
  // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
 
  /**** microSD ****/
  SPI.begin();
  pinMode(10, OUTPUT);
  digitalWrite(10, HIGH);
  // Open serial communications and wait for port to open:
  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }
  Serial.print("Initializing SD card...");
  if (!SD.begin(10)) {
    Serial.println("initialization failed!");
    while (1);
  }
  Serial.println("initialization done.");
  // open the file. note that only one file can be open at a time,
  // so you have to close this one before opening another.
  myFile = SD.open("test.txt", FILE_WRITE);
  // if the file opened okay, write to it:
  if (myFile) {
    Serial.print("Writing to test.txt...");
    myFile.println("Data Set start");
    {
    }
    // close the file:
    myFile.close();
    Serial.println("done.");
  } else {
    // if the file didn't open, print an error:
    Serial.println("error opening test.txt");
  }
 
}
 
void loop()
{
 
  /**** Timestamp ****/
  time_now = millis();
 
  /**** Temperature sensor ****/
  int analogValue;
  float temperature;
 
  // read our temperature sensor
  analogValue = analogRead(lm35Pin);
  //analogValue = analogRead(lm35Pin) * calibration;
  //Serial.println(analogValue);
 
  // convert the 10bit analog value to celcius
  temperature = float(analogValue) / 1023;
  temperature = temperature * 500;
 
  // print the temperature over serial
  Serial.print("Temp: ");
  Serial.print(temperature);
  Serial.println("C");
 
  // wait 1s before reading the temperature again
  //delay(1000);
 
  /**** LCD ****/
  // set the cursor to column 0, line 1
  // (note: line 1 is the second row, since counting begins with 0)
  // print the timeStamp
  lcd.setCursor(0, 0);
  lcd.print("timeStamp");
  lcd.setCursor(10, 0);
  lcd.print(timeStamp);
 
  // print the temperature
  lcd.setCursor(0, 1);
  lcd.print("temp");
  lcd.setCursor(10, 1);
  lcd.print(temperature);
 
  /**** microSD ****/
  myFile = SD.open("test.txt", FILE_WRITE);
  // if the file opened okay, write to it:
  if (myFile) {
    Serial.print("Writing to temp.txt...");
    myFile.print(timeStamp);
    myFile.print(",");
    myFile.println(temperature);
    {
    }
    // close the file:
    myFile.close();
    Serial.println("done.");
  } else {
    // if the file didn't open, print an error:
    Serial.println("error opening temp.txt");
  }
  while (millis() < time_now + period) {
    //wait approx. [period] ms
  }
 
  /**** increment timeStamp ****/
  timeStamp++;
 
  /**** LCD ****/
  lcd.clear();
}
